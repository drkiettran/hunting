events {
    worker_connections 1024;
}

http {
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name hunting.yourdomain.com;
        return 301 https://$server_name$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name hunting.yourdomain.com;
        
        ssl_certificate /etc/ssl/certs/hunting-system.crt;
        ssl_certificate_key /etc/ssl/certs/hunting-system.key;
        
        # Frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Security headers for frontend
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://hunting.yourdomain.com;" always;
        }
        
        # API Gateway
        location /api/ {
            proxy_pass https://gateway-service:8443;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Rate limiting for login
            location /api/auth/login {
                limit_req zone=login burst=10 nodelay;
                proxy_pass https://gateway-service:8443;
                proxy_ssl_verify off;
            }
            
            # General API rate limiting
            limit_req zone=api burst=200 nodelay;
        }
        
        # Health checks
        location /health {
            proxy_pass https://gateway-service:8444/actuator/health;
            proxy_ssl_verify off;
            access_log off;
        }
    }
}